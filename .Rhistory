makeCacheMatrix <- function(x = matrix()) {
m = NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function() X
setinverse <- function(solve) m <<- solve
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cachemean <- function(x, ...) {
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
#######
library(dplyr)
makeCacheMatrix <- function(x = matrix()) {
m = NULL
set <- function(y){
x <<- y
m <<- NULL
}
get <- function() X
setinverse <- function(solve) m <<- solve
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cachemean <- function(x, ...) {
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
test <- rbind(c(1,3),c(3,1))
cachemean(test)
